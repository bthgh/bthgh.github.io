{
    "version": "https://jsonfeed.org/version/1",
    "title": "BthGh",
    "description": "",
    "home_page_url": "http://bthgh.github.io",
    "feed_url": "http://bthgh.github.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "BthGh"
    },
    "items": [
        {
            "id": "http://bthgh.github.io/how-to-increase-performance-of-aspnet-mvc.html",
            "url": "http://bthgh.github.io/how-to-increase-performance-of-aspnet-mvc.html",
            "title": "How to Increase Performance of Asp.net MVC?",
            "summary": "This article demonstrates how to increase Asp.net MVC 5 performance by using custom view engine. By default, ASP.NET MVC uses both Razor View Engine and ASPX View Engine. When we request for a view in browser, first it uses Web Form View Engine to search&hellip;",
            "content_html": "<p>This article demonstrates how to increase Asp.net MVC 5 performance by using custom view engine. By default, ASP.NET MVC uses both Razor View Engine and ASPX View Engine. When we request for a view in browser, first it uses Web Form View Engine to search for the requested view and then using Razor View Engine. For example, when we request Index view from Product Controller, the following locations were searched: </p>\n<pre class=\"language-cs\"><code class=\"language-cs\">~/Views/Product/Index.aspx\n~/Views/Product/Index.ascx\n~/Views/Shared/Index.aspx\n~/Views/Shared/Index.ascx\n~/Views/Product/Index.cshtml\n~/Views/Product/Index.vbhtml\n~/Views/Shared/Index.cshtml\n~/Views/Shared/Index.vbhtml  </code></pre>\n<p> </p>\n<p>As you can see some of them were ended with aspx, which is related to Web Form View Engine. As far as we are using Razor view we don't need Web Form View Engine, so we can remove it. To do this first we need to remove all the view engines and then add the Razor view engine. So you should add the following codes to the Application_Start() method of Global.asax.</p>\n<pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Application_Start</span><span class=\"hljs-params\">()</span>\n        </span>{\n            AreaRegistration.RegisterAllAreas();\n            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);\n            \n            <span class=\"hljs-comment\">//Add these two Lines</span>\n            ViewEngines.Engines.Clear();  \n            ViewEngines.Engines.Add(<span class=\"hljs-keyword\">new</span> RazorViewEngine());\n\n            RouteConfig.RegisterRoutes(RouteTable.Routes);\n            BundleConfig.RegisterBundles(BundleTable.Bundles);\n        }\n</code></pre>\n<p>The result will be :</p>\n<pre class=\"language-cs\"><code class=\"language-cs\">~<span class=\"hljs-regexp\">/Views/</span>Product/Index.cshtml\n~<span class=\"hljs-regexp\">/Views/</span>Product/Index.vbhtml\n~<span class=\"hljs-regexp\">/Views/</span>Shared/Index.cshtml\n~<span class=\"hljs-regexp\">/Views/</span>Shared/Index.vbhtml\n</code></pre>\n<p>As you can see the MVC just using Razor view engine, but still searching for both C# and VB pages. As far as we using C# we don't need VB. So we need to create our custom view engine. To create a custom view engine follow these steps:</p>\n<ol>\n<li>Create a class with the name <em>MyViewEngine</em></li>\n<li>Inherit from RazorViewEngine class</li>\n<li>Config predefined location properties</li>\n</ol>\n<pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyViewEngine</span> : <span class=\"hljs-title\">RazorViewEngine</span>\n    {\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">MyViewEngine</span>()\n        </span>{\n            AreaViewLocationFormats = <span class=\"hljs-keyword\">new</span>[]\n            {\n                <span class=\"hljs-string\">\"~/Areas/{2}/Views/{1}/{0}.cshtml\"</span>,\n                <span class=\"hljs-string\">\"~/Areas/{2}/Views/Shared/{0}.cshtml\"</span>\n            };\n            AreaMasterLocationFormats = <span class=\"hljs-keyword\">new</span>[]\n            {\n                <span class=\"hljs-string\">\"~/Areas/{2}/Views/{1}/{0}.cshtml\"</span>,\n                <span class=\"hljs-string\">\"~/Areas/{2}/Views/Shared/{0}.cshtml\"</span>\n            };\n            AreaPartialViewLocationFormats = <span class=\"hljs-keyword\">new</span>[]\n            {\n                <span class=\"hljs-string\">\"~/Areas/{2}/Views/{1}/{0}.cshtml\"</span>,\n                <span class=\"hljs-string\">\"~/Areas/{2}/Views/Shared/{0}.cshtml\"</span>\n            };\n            ViewLocationFormats = <span class=\"hljs-keyword\">new</span>[]\n            {\n                <span class=\"hljs-string\">\"~/Views/{1}/{0}.cshtml\"</span>,\n                <span class=\"hljs-string\">\"~/Views/Shared/{0}.cshtml\"</span>\n            };\n            MasterLocationFormats = <span class=\"hljs-keyword\">new</span>[]\n            {\n                <span class=\"hljs-string\">\"~/Views/{1}/{0}.cshtml\"</span>,\n                <span class=\"hljs-string\">\"~/Views/Shared/{0}.cshtml\"</span>\n            };\n            PartialViewLocationFormats = <span class=\"hljs-keyword\">new</span>[]\n            {\n                <span class=\"hljs-string\">\"~/Views/{1}/{0}.cshtml\"</span>,\n                <span class=\"hljs-string\">\"~/Views/Shared/{0}.cshtml\"</span>\n            };\n        }\n    }\n</code></pre>\n<p>Then we update Application_Start method :</p>\n<pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">protected</span> <span class=\"hljs-keyword\">void</span> <span class=\"hljs-title\">Application_Start</span><span class=\"hljs-params\">()</span>\n        </span>{\n            AreaRegistration.RegisterAllAreas();\n            FilterConfig.RegisterGlobalFilters(GlobalFilters.Filters);\n\n            ViewEngines.Engines.Clear();  \n            ViewEngines.Engines.Add(<span class=\"hljs-keyword\">new</span> MyViewEngine());\n\n            RouteConfig.RegisterRoutes(RouteTable.Routes);\n            BundleConfig.RegisterBundles(BundleTable.Bundles);\n        }\n</code></pre>\n<p>The result will be:</p>\n<pre class=\"language-cs\"><code class=\"language-cs\">~<span class=\"hljs-regexp\">/Views/</span>product/Index.cshtml\n~<span class=\"hljs-regexp\">/Views/</span>Shared/Index.cshtml\n</code></pre>\n<p>As you can see MVC just search for C# views.</p>",
            "image": "http://bthgh.github.io/media/posts/1/performanceCover.jpg",
            "author": {
                "name": "BthGh"
            },
            "tags": [
            ],
            "date_published": "2018-12-23T23:18:00+08:00",
            "date_modified": "2019-09-01T20:59:58+08:00"
        }
    ]
}
